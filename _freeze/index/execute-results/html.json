{
  "hash": "a64a3dfcd6bb48f5b1d6932c0d7e8526",
  "result": {
    "markdown": "---\nlogo: \"img/wtf-logo-square-transparent.png\"\nformat: \n  revealjs: \n    theme: [night, slides.scss]\n    highlight-style: a11y\n    transition: fade\n    slide-number: true\n    chalkboard: true\n    navigation-mode: linear\n    controls: false\n    mermaid-format: svg\nexecute:\n  freeze: auto\nfrom: markdown+emoji\n---\n\n\n# {background-image=\"img/forks.jpg\"}\n\n<h1><span class=\"highlight\">using version control<span></h1>\n\n\n## imagine we need to work on a document together \n\nhow should we do that?  \n\n## key questions\n\n- which version of the document is the authoritative one?  \n- if you and I change the same thing:\n  - how will we know we did that?\n  - whose edits should win?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_8f3f21d5\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## some solutions\n\n::: {layout-nrow=1}\n::: fragment\n![dropbox](img/dropbox.svg){width=20%}\n:::\n::: fragment\n![shared drive](img/fileserver.svg){width=20%}\n:::\n::: fragment\n![email](img/email.png){width=20%}\n:::\n::: fragment\n![google docs](img/googledocs.svg){width=20%}\n:::\n:::\n\n::: notes\nlet's talk about how we're not solving the problem:\n\nIf you and I need to collaborate on a document _today_, what options do we have?\n\nwarm up discussion: consider these mechanisms for shared editing and limitations:\n\n- dropbox\n  - You have to trust dropbox to figure out conflicts for you and then hope they got it right\n- email attachments\n  - every email attachment of the document is a new, potentially authortiative copy and this gets increasingly confusing as you add collaborators\n  - `doc_date_FINAL.docx`\n- shared drive\n  - typically only one person can modify the document at a time\n- sharepoint\n  - we may not have access to the same proprietary program for editing\n  - depends on shared service access\n- a google doc\n  - google docs are pretty good, actually, until we start talking about code\n\n\nwhat if you're working on code? what if your collaborators are strangers? what if they're halfway around the world?\n\nplain text is a least common denominator\nwe're not assuming access to shared hardware\nwe are assuming that collaboration is async\n:::\n\n## on plain text\n\n![beware](img/evernote.png)\n\n::: notes\nBe careful about storing valuable IP of yours in places that can take it away from you when they change business models\n:::\n\n\n# agenda\n\n## agenda\n\n- terminology\n- terminalogy\n- workflows: I\n- tools\n- workflows: II\n- unhappy paths\n\n## resources\n\n::: columns\n\n::: {.column}\n\n### What They Forgot\n\n[![](./img/wtf-logo-square-transparent.png)](https://rstats.wtf)\n:::\n\n::: {.column}\n\n### Happy Git with R\n\n[![](./img/happy-git.png)](https://happygitwithr.com)\n:::\n\n:::\n\n## goals\n\n![](./img/inception.webp)\n\n::: notes\nour objective is to go deeper\nthis workshop will emphasize terminal workflows and preview how other tools layer interactions on top\nchoose a workflow that works for you, and pick up sharper tools when needed\n:::\n\n# terminology\n\n## git\n\n_distributed_ version control system\n\n::: notes\ndistributed = we all have a copy\ncontrast with other approaches where there is only one copy\n:::\n\n## repository\n\n```bash\n./\n├── ChangeLog\n├── config.site\n├── configure*\n├── configure.ac\n├── configure.patch\n├── COPYING\n├── doc/\n├── etc/\n├── INSTALL\n├── m4/\n├── Makeconf.in\n├── Makefile.fw\n├── Makefile.in\n├── po/\n├── README\n├── share/\n├── src/\n├── tests/\n├── tools/\n├── VERSION\n└── VERSION-NICK\n```\n\n::: notes\na repository is a a project\nopinions on the scope of what belongs in a single repository vary widely\nmonorepos?\n:::\n\n## remote\n\ngit vs. github / gitlab / bitbucket\n\n::: notes\ngit is decentralized\ngithub is how we coordinate\nthe authoritative copy is stored by the code host\n:::\n\n## clone / fork\n\n::: notes\nwho has permissions to make changes to a consensus copy is managed by the service provider\nforks are for untrusted collaborators / open source salt\n:::\n\n## commit\n\n\n```{mermaid}\ngitGraph\n  commit id: \"initial commit\"\n  commit id: \"snapshot one\"\n  commit id: \"snapshot two\"\n```\n\n\n::: notes\na snapshot of project state\nshopping cart analogy?\n:::\n\n## diff\n\n\n```{mermaid}\ngitGraph\n  commit id: \"initial commit\"\n  commit id: \"snapshot one\"\n  commit id: \"snapshot two\"\n```\n\n\n::: notes\nthe difference between  _any_ two project snapshots\ndraw on the slides!\n:::\n\n## `HEAD`\n\n\n```{mermaid}\ngitGraph\n  commit id: \"initial commit\"\n  commit id: \"snapshot one\"\n  commit id: \"HEAD\"\n```\n\n\n# terminalogy\n\n## words have meaning\n\nterminal  \nshell  \ncommand-line interface (CLI)[^so]\n\n[^so]: https://askubuntu.com/a/506628\n\n\n## structure\n\n`command subcommand --long-argument -s`\n\n## navigating\n\n`pwd`  \n`cd`  \n`ls -lha`  \n\n## creating\n\n`mkdir <directory-name>`  \n`rmdir <directory-name>`  \n`touch <file-name.ext>`  \n`cp <from-file> <to-file>`  \n`mv `\n\n::: callout-caution\n`rm -rf <directory>`\n:::\n\n\n## look around\n\n- create a directory\n- put some files in it\n- delete it\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_61e585dd\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:30%;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# workflows: I\n\n## systems check\n\n::: panel-tabset\n\n### terminal\n\n```bash\ngit config --global --list\n```\n### R\n\n```r\nusethis::git_sitrep()\n```\n:::\n\n\n## systems check\n\nhidden files:\n\n::: panel-tabset\n\n### terminal\n\n```bash\nls -lha\n```\n\n### {{< fa brands windows >}}\n\n![](./img/show-hidden-files.png)\n\n### {{< fa brands apple >}}\n\n`CMD + SHIFT + .`\n\n:::\n\n## new project\n\n- create project (from rstudio, or terminal)\n\n```bash\nmkdir intro-git\ncd intro-git\ngit init\n```\n\n::: notes\ninspect the directory\npresence of `.git` is what makes it a repository\nyou can be a productive user of git without deeply understanding the contents of that directory\n:::\n\n## `git status`\n\nrun often\n\n## `git status`\n\n```bash\n❯ git status\nOn branch main\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)\n```\n\n## add some files\n\n```bash\ntouch index.qmd\n```\n\n## untracked files\n\n```bash\n❯ git status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t_quarto.yml\n\tindex.qmd\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n```\n\n## `git stage`\n\n```bash\n❯ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n\tnew file:   _quarto.yml\n\tnew file:   index.qmd\n```\n\n::: notes\nall the documentation you will ever see is for `git add`\n:::\n\n## {{< fa brands windows >}}\n\n```bash\n$ git add index.qmd\nwarning: LF will be replaced by CRLF in index.qmd.\nThe file will have its original line endings in your working directory\n```\n\n::: panel-tabset\n\n### CR\n\n`\\r`\n\n### LF\n\n`\\n`\n\n### CRLF\n\n`\\r\\n`\n\n:::\n\n<hr>\n\n[dos2unix](https://linux.die.net/man/1/dos2unix)\n\n\n## new project, who dis\n\n\n::: panel-tabset\n\n### terminal\n\n```bash\ngit config --global user.name edavidaja\ngit config --global user.email david@posit.cor\n```\n\n### R\n\n```r\nusethis::git_sitrep()\n```\n\n:::\n\n## `git commit`\n\n\n```bash\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch main\n#\n# Initial commit\n#\n# Changes to be committed:\n#       new file:   _quarto.yml\n#       new file:   index.qmd\n\"~/Documents/projects/intro-git/.git/COMMIT_EDITMSG\" 12L, 255B\n```\n\n## `EDITOR`\n\n::: panel-tabset\n\n### vim\n\n➡️normal mode  \n`I`: insert mode, write a message  \n`ESC`: return to normal mode  \n`:` : command mode  \n`wq`: write the file and quit  \n`q!`: quit without saving  \n\n### nano\n\n`CTRL|CMD + O` to save  \n`CTRL|CMD + X` to exit  \n\n:::\n\n## `git commit -m`\n\n```bash\n❯ git commit -m \"initial commit\"\n[main (root-commit) cab0112] initial commit\n 2 files changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 _quarto.yml\n create mode 100644 index.qmd\n```\n\n## `git status`\n\n```bash\n❯ git status\nOn branch main\nnothing to commit, working tree clean\n```\n\n## repeat\n\nwith rstudio, vscode\n\n## `git log`\n\n```bash\n❯ git log\ncommit 3efdc26af7bf6ea223bfa61c6cb4507de632690e (HEAD -> main)\nAuthor: edavidaja <edavidaja@hey.com>\nDate:   Thu Jul 20 15:03:03 2023 -0400\n\n    added vs code workspace\n\ncommit 0d98a3c9cf2a351da39b26adbfad442c834ff8d4\nAuthor: edavidaja <edavidaja@hey.com>\nDate:   Thu Jul 20 14:55:34 2023 -0400\n\n    added rstudio project files\n\ncommit cab0112f6f96bdd82a46e622d8fccd445fc38d17\nAuthor: edavidaja <edavidaja@hey.com>\nDate:   Thu Jul 20 14:51:23 2023 -0400\n\n    initial commit\n```\n::: notes\ndiscuss hashes\n:::\n\n\n## `git status`\n\n```bash\n❯ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   index.qmd\n\n```\n\n\n## publish to github\n\n[existing project, github first](https://happygitwithr.com/existing-github-first.html)\n\n## publish to github: setup\n\n```bash\ngit remote add origin https://github.com/edavidaja/intro-git.git\ngit branch -M main\n```\n\n## `git push`\n\n```bash\n❯ git push -u origin main\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (5/5), 418 bytes | 418.00 KiB/s, done.\nTotal 5 (delta 0), reused 0 (delta 0), pack-reused 0\nTo https://github.com/edavidaja/intro-git.git\n * [new branch]      main -> main\nbranch 'main' set up to track 'origin/main'.\n```\n\n\n## all together now\n\n```bash\nmkdir intro-git\ncd intro-git\ngit init\ntouch _quarto.yml\ngit stage _quarto.yml\ngit commit -m \"added quarto yml\"\ntouch index.qmd\ngit stage index.qmd\ngit commit -m \"added quarto document\"\n```\n\ncreate intro-git on GH  \nfollow instructions to push\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_94973385\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## `.gitignore`\n\n```bash\n.Renviron\n.env\n.Rproj.user\n*.csv\ndata/\n```\n\n# tools\n\n## launchers\n\n::: columns\n\n::: column\n\n### {{< fa brands apple >}}\n\n- [spotlight](https://support.apple.com/guide/mac-help/search-with-spotlight-mchlp1008/mac)\n- [alfred](https://www.alfredapp.com/)\n- [raycast](https://www.raycast.com/)\n\n:::\n\n::: column\n### {{< fa brands windows >}}\n\n- `CTRL + ESC`\n- [PowerToys Run](https://learn.microsoft.com/en-us/windows/powertoys/run)\n\n:::\n\n:::\n\n\n## terminals\n\n::: columns\n\n::: column\n### {{< fa brands apple >}}\n\n- [Terminal.app](https://support.apple.com/guide/terminal/open-or-quit-terminal-apd5265185d-f365-44cb-8b09-71a064a42125/mac)\n- [warp](https://warp.dev)\n- [iTerm2](https://iterm2.com/)\n\n\n:::\n\n::: column\n### {{< fa brands windows >}}\n\n- [wt](https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701)\n\n:::\n\n:::\n\n### cross-platform\n\n[alacritty](https://alacritty.org/)\n\n## shell helpers\n\n- [Nerd Fonts](https://www.nerdfonts.com/)\n- [starship](https://starship.rs/)\n- [fig](https://fig.io)\n- [`{prompt}`](https://github.com/gaborcsardi/prompt)\n- `oh-my-*` ([zsh](https://ohmyz.sh/), [posh](https://ohmyposh.dev/), [bash](https://ohmybash.nntoan.com/))\n- [fzf](https://github.com/junegunn/fzf)\n- [atuin](https://atuin.sh/)\n\n\n## command line interfaes\n\n- [tldr](https://tldr.sh)\n- [gh](https://cli.github.com/)\n\n## editors\n\n- [vs code](https://code.visualstudio.com/) \n- [sublime](https://www.sublimetext.com/)\n- [notepad++](https://notepad-plus-plus.org/)\n\n## git GUIs\n\n[Recommended Git Clients](https://happygitwithr.com/git-client#recommended-git-clients)\n\n## how?!\n\n[personal radmin](https://rstats.wtf/personal-radmin)\n\n\n# workflows: II\n\n::: notes\n1.  local workflow:\nbranch\ncommit\nlog\nmerge\nlog\n\n2. GitHub Workflow\nbranch \ncommit\nlog\npush\nopen PR\nmerge on GH\npull\n\n:::\n\n## branch\n\n\n```{mermaid}\ngitGraph\n  commit\n  commit\n  commit\n  branch experiment\n  checkout experiment\n  commit\n```\n\n\n## create a branch\n\nall equivalent:\n\n```bash\n❯ git branch new_branch\n❯ git checkout new_branch\nSwitched to branch 'new_branch'\n```\n<br/>\n<hr>\n<br/>\n\n```bash\n❯ git checkout -b new_branch\nSwitched to a new branch 'new_branch'\n```\n<br/>\n<hr>\n<br/>\n\n\n```bash\n❯ git switch --create new_branch\nSwitched to a new branch 'new_branch'\n```\n\n## `git status`\n\n```bash\n❯ git status\nOn branch new_branch\nnothing to commit, working tree clean\n```\n\n## back to main\n\n```bash\n❯ git checkout main\nSwitched to branch 'main'\n```\n\n<br/>\n<hr>\n<br/>\n\n```bash\n❯ git switch main\nSwitched to branch 'main'\n```\n\n## multiverse\n\n- checkout `new_branch`\n- edit an existing file\n- commit\n- switch back to main\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_d0f0c744\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:30%;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## commit on branch\n\n```bash\n❯ git commit -am \"commit on a branch\"\n[new_branch f1c234b] commit on a branch\n 1 file changed, 3 insertions(+)\n\n❯ cat index.qmd\n---\ntitle: happy git\n---\n\n❯ git checkout main\nSwitched to branch 'main'\n\n❯ cat index.qmd\n\n```\n\n## merge\n\n\n```{mermaid}\ngitGraph\n  commit\n  commit\n  commit\n  branch experiment\n  checkout experiment\n  commit\n  checkout main\n  merge experiment\n```\n\n\n## `git merge`\n\n```bash\ngit merge new_branch\n❯ git merge new_branch\nUpdating 7614b5c..f1c234b\nFast-forward\n index.qmd | 3 +++\n 1 file changed, 3 insertions(+)\n```\n\n## PRs\n\n- checkout `second_branch`\n- edit an existing file\n- commit\n- push the branch to GitHub\n\n\n## `--set-upstream`\n\n```bash\n❯ git push\nfatal: The current branch second-branch has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin second-branch\n\nTo have this happen automatically for branches without a tracking\nupstream, see 'push.autoSetupRemote' in 'git help config'.\n```\n\n## `git config`\n\n[`git config --global push.autoSetupRemote true`](https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushautoSetupRemote)\n\n<br/>\n\n::: callout-warning\nI set this globally because my workflow is pretty basic, ymmv\n:::\n\n## `git push -u`\n\n```bash\n❯ git push -u origin second-branch\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 308 bytes | 308.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nremote:\nremote: Create a pull request for 'second-branch' on GitHub by visiting:\nremote:      https://github.com/edavidaja/intro-git/pull/new/second-branch\nremote:\nTo https://github.com/edavidaja/intro-git.git\n * [new branch]      second-branch -> second-branch\nbranch 'second-branch' set up to track 'origin/second-branch'.\n```\n\n## permissions & project management\n\n![](./img/gh-pr.png)\n\n::: notes\nGitHub makes it easier to collaborate on who is allowed to make changes to projects and under what circumstances\nyou might want to condition a merge on whether all your test pass with the new code\n:::\n\n# unhappy paths\n\n## push rejection\n\n- make a new file locally, then try to push to GH\n\n```bash\n❯ git push\nTo https://github.com/edavidaja/intro-git.git\n ! [rejected]        main -> main (fetch first)\nerror: failed to push some refs to 'https://github.com/edavidaja/intro-git.git'\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first integrate the remote changes\nhint: (e.g., 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n```\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_8eea7a78\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## merge strategy\n\n```bash\n❯ git pull\nremote: Enumerating objects: 5, done.\nremote: Counting objects: 100% (5/5), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (3/3), 636 bytes | 212.00 KiB/s, done.\nFrom https://github.com/edavidaja/intro-git\n   2bdda53..424444e  main       -> origin/main\nhint: You have divergent branches and need to specify how to reconcile them.\nhint: You can do so by running one of the following commands sometime before\nhint: your next pull:\nhint:\nhint:   git config pull.rebase false  # merge\nhint:   git config pull.rebase true   # rebase\nhint:   git config pull.ff only       # fast-forward only\nhint:\nhint: You can replace \"git config\" with \"git config --global\" to set a default\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\nhint: or --ff-only on the command line to override the configured default per\nhint: invocation.\nfatal: Need to specify how to reconcile divergent branches.\n```\n\n\n## merge conflicts\n\n\n```{mermaid}\ngitGraph\n  commit\n  commit\n  commit\n  branch experiment\n  checkout experiment\n  commit\n  checkout main\n  commit\n```\n\n## merge conflict\n\n- modify a file on GH\n- modify the same file locally\n\n```bash\n❯ git pull --rebase\nAuto-merging main.R\nCONFLICT (content): Merge conflict in main.R\nerror: could not apply 160ea3e... added tidyverse\nhint: Resolve all conflicts manually, mark them as resolved with\nhint: \"git add/rm <conflicted_files>\", then run \"git rebase --continue\".\nhint: You can instead skip this commit: run \"git rebase --skip\".\nhint: To abort and get back to the state before \"git rebase\", run \"git rebase --abort\".\nCould not apply 160ea3e... added tidyverse\n```\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_fe8b076f\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## \n\n```r\n<<<<<<< HEAD\nlibrary(shiny)\n||||||| parent of 160ea3e (added tidyverse)\n=======\nlibrary(tidyverse)\n>>>>>>> 160ea3e (added tidyverse)\n\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/countdown-0.4.0/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}